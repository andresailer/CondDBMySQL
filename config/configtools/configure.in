dnl Process this file with autoconf to produce a configure script.

AC_INIT(config/configtools/acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(config/configtools)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(ConditionsDB,0.4)

dnl for a new implementation of configure...
#AC_LIBTOOL_DLOPEN
#AC_PROG_LIBTOOL


unset CDPATH

dnl make /usr/local the default for the installation
AC_PREFIX_DEFAULT(/usr/local/conddb)
if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi

###MY_FAST_CONFIGURE
MY_CONF_FILES

dnl without this order in this file, automake will be confused!
AC_CONFIG_HEADERS([config.h])

dnl checks for programs.
dnl first check for c/c++ compilers - user macro
AC_CHECK_COMPILERS

dnl Enable shared lybraries by default
AC_ENABLE_SHARED(yes)

dnl set the following to yes, if you want to create static
dnl libtool-libraries, too.
AC_ENABLE_STATIC(no)

dnl ******************** Checking for liz availability...mysql libs requirement

AC_CHECK_LIB(z,main,,[]) 

dnl ******************** End of libz check

dnl ******************* Checking for libsocket (necessary for sparc to link with mysql)

AC_CHECK_LIB(socket,socket,,[])

dnl ******************* End of libsocket

dnl ******************* Checking for libnsl (necessary for linking with mysql lib on SPARC)

AC_CHECK_LIB(nsl,inet_addr,,[])

dnl ******************* End of libnsl check

dnl ******************* Checking for libm (necessary for linking with mysql lib on SPARC)

AC_CHECK_LIB(m,floor,,[])

dnl ******************* End of libm check

dnl ******************** MySQL library and header check procedure **************

dnl Getting user localtion of the header files and libraries
    
AC_ARG_WITH(mysql-lib,
            [  --with-mysql-lib=DIR	sets location of the MySQL client library],
	    [TMPLIB=${withval}])

AC_ARG_WITH(mysql-inc,
            [  --with-mysql-inc=DIR	sets location to the MySQL client include files],
	    [TMPINC=${withval}])

dnl Checking if the location is valid


dnl ...first for headers
AC_FIND_FILE([mysql.h], [$TMPINC /usr/include /usr/include/mysql/ /usr/local/include /usr/local/include/mysql],MYSQLINC)

if test "x$MYSQLINC" = "xNO" ;then
   AC_MSG_ERROR([Can't find the mysql header files. Have you specified the right place?])
else
	MYSQL_CFLAGS="-I${MYSQLINC}"
 
	echo "MySQL include files found at: $MYSQLINC"
	all_includes="$all_includes -I${MYSQLINC}"
fi

dnl Now for the library...we must at first check the user location

MYSQLFOUND=no
AC_MSG_CHECKING([for MySQL library in user defined path])
    saved_CFLAGS="$CFLAGS"
    CFLAGS="$CFLAGS -I$TMPINC"
    saved_LIBS="$LIBS"
    LIBS="$LIBS -lmysqlclient"
    saved_LDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS -L$TMPLIB"
 
    AC_TRY_LINK([#include <mysql.h>],
                [MYSQL m_mysql;
                 mysql_init(&m_mysql);
                 mysql_close(&m_mysql);],
                [MYSQLFOUND=yes],
                [MYSQLFOUND=no])


if test "$MYSQLFOUND" = "yes"; then
   AC_MSG_RESULT([found at $TMPLIB])
   all_libraries="$all_libraries -L$TMPLIB -lmysqlclient"
else
   CFLAGS="$saved_CFLAGS"
   LIBS="$saved_LIBS"
   LDFLAGS="$saved_LDFLAGS"
   AC_MSG_RESULT(not found)
dnl   if test "$MYSQLFOUND" != "yes"; then
   echo "Could not found the mysql lib in user location...trying automaticaly"
   MYSQLFOUND=bla
   AC_CHECK_LIB(mysqlclient,main,,[MYSQLFOUND=no])
   if test "x$MYSQLFOUND" = "xno"; then
      AC_MSG_ERROR([Can't find the mysql library! instalation cannot continue...])
   fi
dnl   fi
fi



dnl Try to locate the mysql library in default locations
dnl AC_MSG_CHECKING([for MySQL library in default locations])
dnl AC_CHECK_LIB(mysqlclient,main,,[MYSQLFOUND=no])
dnl if test x$MYSQLFOUND = xno; then
dnl         echo ""
dnl         echo ""
dnl         echo "*** MySQL library could not be located automatically...                    ***"
dnl dnl         echo "*** Be shure that you specify the location for the libraries               ***"
dnl         echo "*** And include files with the respective --with directives                ***"
dnl 	echo ""
dnl 	echo ""
dnl 	AC_MSG_CHECKING([for MySQL library in non standard locations])
dnl 
dnl 	if test -r "$TMPLIB/libmysqlclient.so" ; then
dnl 	   all_libraries="$all_libraries -L$TMPLIB -lmysqlclient"
dnl 	   AC_MSG_RESULT([found at $TMPLIB])	
dnl 	else
dnl 		AC_MSG_RESULT([not found!])
dnl 		AC_MSG_ERROR([Can't find the mysql library! instalation cannot continue...])
dnl 	fi
dnl fi

dnl AC_FIND_FILE([mysql.h], [/usr/include /usr/include/mysql/ /usr/local/include /usr/local/include/mysql $TMPINC],MYSQLINC)

dnl if test "x$MYSQLINC" = "x" ;then
dnl    AC_MSG_ERROR([Can't find the mysql header files. Have you specified the right place?])
dnl else
dnl 	MYSQL_CFLAGS="-I${MYSQLINC}"
dnl 
dnl	echo "MySQL include files found at: $MYSQLINC"
dnl	all_includes="$all_includes -I${MYSQLINC}"
dnl fi

dnl **************** End of MySQL files verification **********************


dnl +++++++++++++++ PHP Bind dependencies check +++++++++++++++++++++++++++ 
BUILD_BIND=no
PHPDIR=""
AC_ARG_ENABLE([php-bind], [  --enable-php-bind          enable compilation of bind for php],[BUILD_BIND=yes])
AC_ARG_WITH([php_dir],[  --with-php-dir          Location of the php files],[TMP_PHP=$with_php_dir])

if test "x$BUILD_BIND" = "xyes"; then
   AC_MSG_CHECKING([for necessary PHP header files for compilation])
   AC_FIND_FILE([TSRM/TSRM.h main/php.h Zend/zend.h],[/usr/include /usr/local/include /usr/include/php /usr/local/include/php $TMP_PHP], PHPDIR)
   if test "x$PHPDIR" = "xNO"; then
      AC_MSG_RESULT([not found!])
      echo ""
      echo "         *** Proceeding without compilation of the bind! ***          "
      echo ""
      BUILD_BIND=no
   fi 
   AC_MSG_RESULT([found at $PHPDIR])
   all_includes="$all_includes -I$PHPDIR -I$PHPDIR/main -I$PHPDIR/regex  -I$PHPDIR/Zend -I$PHPDIR/TSRM "
fi

dnl ++++++++++++++++++ End of PHP Bind dependencies +++++++++++++++++++++++

dnl ++++++++++++++++++ TCL wrapper verifications ++++++++++++++++++++++++++

dnl Choice to make the time tests
AC_ARG_ENABLE(timetests,[  --enable-timetests      enable time tests],
              [USE_TIME=yes],USE_TIME=no)

USE_TCL=nopes
dnl Check for tcl
AC_ARG_ENABLE(tcl,[  --enable-tcl            enable use of the tcl wrapper], USE_TCL=yes)
AC_ARG_WITH(tcl_inc,[  --with-tcl-inc=DIR      location of tcl header files],[TMPINC=$with_tcl_inc])
if test "x$USE_TCL" = "xyes"; then
   AC_MSG_CHECKING([for tcl header files])
   TCLINC=NO
   AC_FIND_FILE([tcl.h], 
		[/usr/include /usr/include/tcl/ $TMPINC /usr/local/include /usr/local/include/tcl/include ],TCLINC)
    if test "x$TCLINC" = "xNO"; then
       USE_TCL=no
       AC_MSG_RESULT([not found!])
       echo ""
       echo "         *** Proceeding without compilation of the tcl browser! ***          "
       echo ""
    else
       AC_MSG_RESULT([found at $TCLINC!])
       TCL_CFLAGS="-I${TCLINC}" 
       all_includes="$all_includes -I${TCLINC}"
       CFLAGS="${CFLAGS} -I${TCLINC}"
    fi
fi

AM_CONDITIONAL(USE_TCL, test "x$USE_TCL" = "xyes")

dnl +++++++++++++++++++++ End of tcl configuration ++++++++++++++++++++++++++

AC_ARG_WITH(conddbprofile,
    [  --with-conddbprofile=<server:database:user:passwd> default profile for access to the database],
    [CDBPROFILE=\\\"$with_conddbprofile\\\"],
    AC_MSG_ERROR([You must specify a default profile with the --with-conddbprofile option.
    e.g. --with-conddbprofile=localhost:mydb:calvin:hobbes])
)
AC_SUBST(CDBPROFILE)

AC_PROG_CXX
AC_PROG_CXXCPP

dnl ----------------- Verification for some necessary header files --------------------

AC_CHECK_HEADER(sys/time.h,
		[AC_DEFINE([HAVE_SYS_TIME_H],1,[Could find the header time.h])],
		[AC_DEFINE([HAVE_SYS_TIME_H],0,[Couldn't find the header time.h])])

AC_CHECK_HEADER(time.h,
		[AC_DEFINE([HAVE_TIME_H],1,[Could find the header time.h])])

AC_CHECK_HEADER(stdlib.h,
		[AC_DEFINE([HAVE_STDLIB_H],1,[Could find the header stdlib.h])],
		[AC_DEFINE([HAVE_STDLIB_H],0,[Couldn't find the header stdlib.h])])

AC_CHECK_HEADER(pwd.h,
		[AC_DEFINE([HAVE_PWD_H],1,[Could find the pwd.h header])])
dnl -------------- End of verification of header files --------------------------------

dnl Check for system endianness
AC_LANG(C++)
AC_TRY_RUN(
[
#include <iostream>
int main()
{
   short one = 1;
   char *cp = (char*)&one;
      if ( *cp == 0 )
	exit(0);
   else
	exit(1);
}
], [AC_DEFINE(CONDDB_BIGENDIAN,[1],[Defines to 1 if system is big endian])],[],[])


dnl Removing the debug symbols by default!!!!
AC_REMOVE_FORBIDDEN(CXX, [-fno-check-new -g])
AC_REMOVE_FORBIDDEN(CXXFLAGS, [-fno-check-new -g])
AC_REMOVE_FORBIDDEN(CFLAGS, [-fno-check-new -g])

dnl create a working libtool-script
MY_PROG_LIBTOOL


MY_CHECK_EXTRA_LIBS
all_libraries="$all_libraries $USER_LDFLAGS $MYSQL_LIBS "
all_includes="$all_includes $USER_INCLUDES $MYSQL_CFLAGS -DMYSQL_INIT_STR=$CDBPROFILE "

if test "x$USE_TIME" = "xyes"; then
   all_includes="$all_includes -DTIMETESTS"
fi

AM_DISABLE_LIBRARIES

AC_SUBST(all_includes)
AC_SUBST(all_libraries)
AC_SUBST(AUTODIRS)
   
dnl MYSQL_SUBDRS="src examples"
TESTS_SUBDRS="basicSession createTags performanceTests readDatax readTable readTableVer \
	  storeDataOnChange storeDatax storeDatay storeTable storeTableVer testFolders \
	  testTableTags testTags "

MAIN_SUBDRS="src tools tests"
TOOLS_SUBDRS="migration"

if test "x$USE_TCL" = "xyes"; then
   TOOLS_SUBDRS="$TOOLS_SUBDRS tcl"
fi

if test "x$BUILD_BIND" = "xyes"; then
   TOOLS_SUBDRS="$TOOLS_SUBDRS php_bind"
fi

dnl AC_SUBST(MYSQL_SUBDRS)
AC_SUBST(TESTS_SUBDRS)
AC_SUBST(MAIN_SUBDRS)
AC_SUBST(TOOLS_SUBDRS)


MY_CREATE_SUBDIRSLIST

CONDDBROOT="$PWD"

AC_DEFINE_UNQUOTED(CONDDBROOT,
		   ["${CONDDBROOT}"],
		   [Defines the default directory to write the code files for user tables])


AC_CONFIG_FILES([ Makefile ])
AC_CONFIG_FILES([ src/Makefile ])
AC_CONFIG_FILES([ tests/Makefile ])
dnl The makefiles for tests
AC_CONFIG_FILES([ tests/basicSession/Makefile ])
AC_CONFIG_FILES([ tests/createTags/Makefile ])
AC_CONFIG_FILES([ tests/performanceTests/Makefile ])
AC_CONFIG_FILES([ tests/readDatax/Makefile ])
AC_CONFIG_FILES([ tests/storeDatay/Makefile ])
AC_CONFIG_FILES([ tests/readTable/Makefile ])
AC_CONFIG_FILES([ tests/readTableVer/Makefile ])
AC_CONFIG_FILES([ tests/storeDataOnChange/Makefile ])
AC_CONFIG_FILES([ tests/storeDatax/Makefile ])
AC_CONFIG_FILES([ tests/storeTable/Makefile ])
AC_CONFIG_FILES([ tests/storeTableVer/Makefile ])
AC_CONFIG_FILES([ tests/testFolders/Makefile ])
AC_CONFIG_FILES([ tests/testTableTags/Makefile ])
AC_CONFIG_FILES([ tests/testTags/Makefile ])
dnl End of tests makefiles
AC_CONFIG_FILES([ tools/Makefile ])
AC_CONFIG_FILES([ tools/migration/Makefile ])
##AC_CONFIG_FILES([ implementationMySQL/user/Makefile ])

if test "x$USE_TCL" = "xyes"; then
   AC_CONFIG_FILES([ tools/tcl/Makefile ])
fi
dnl This must be changed in future for inputting the ancient Makefile
if test "x$BUILD_BIND" = "xyes"; then
   AC_CONFIG_FILES([ tools/php_bind/Makefile])
fi
AC_OUTPUT
if test "$all_tests" = "bad"; then
  if test ! "$cache_file" = "/dev/null"; then
    echo ""    
    echo "Please remove the file $cache_file after changing your setup"
    echo "so that configure will find the changes next time."
    echo ""
  fi
else
  echo "Your configuration is:"
  echo "----------------------"
  echo "Time tests: $USE_TIME"
  echo "Build tcl lib: $USE_TCL"
  if test "x$USE_TCL" = "xyes"; then
     echo "Tcl headers : $TCL_CFLAGS"
  fi
  echo "CondDBProfile: $CDBPROFILE"
  echo "MySQL CFLAGS : $MYSQL_CFLAGS"
  echo "Build bind for php: $BUILD_BIND"

  if test "x$BUILD_BIND" = "xyes"; then
     echo "PHP files found in $PHPDIR"
  fi
  echo ""
  echo ""
  echo "Good - your configure finished. Start make now"
  echo ""
  echo ""
fi
